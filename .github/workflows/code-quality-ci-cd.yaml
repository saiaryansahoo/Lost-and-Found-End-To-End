name: CI/CD Pipeline

# Trigger the workflow on push to main branch or pull request to main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Jobs to run
jobs:
  # Code Quality and Testing
  code-quality-and-testing:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java (replace with your Java version)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      # Run code quality checks (e.g., Checkstyle, PMD, SpotBugs)
      - name: Run Checkstyle
        run: mvn checkstyle:check

      - name: Run PMD
        run: mvn pmd:check

      - name: Run SpotBugs
        run: mvn spotbugs:check

      # Run unit tests
      - name: Run unit tests
        run: mvn test

      # Run integration tests (if applicable)
      - name: Run integration tests
        run: mvn verify -P integration-tests

  # Build and Package
  build-and-package:
    runs-on: ubuntu-latest
    needs: code-quality-and-testing
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      # Build the project
      - name: Build the project
        run: mvn clean package -DskipTests

      # Upload the build artifact (e.g., JAR file)
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-app
          path: target/*.jar